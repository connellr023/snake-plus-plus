name: Continuous Delivery

on:
  push:
    tags:
      - "v*"

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: "Release ${{ github.ref }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

  build-windows:
    runs-on: windows-latest
    needs: create_release
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install make
        run: choco install make -y

      - name: Set up MSVC
        uses: msys2/setup-msys2@v2
        with:
          arch: x86_64

      - name: Build Windows x86/x64 Release
        run: make release

      - name: Upload Windows Release to GitHub
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./build.exe
          asset_name: windows_x86_x64_release.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

  build-linux:
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update &&
          sudo apt-get install -y libx11-dev g++

      - name: Build Linux x86/x64 Release
        run: make release

      - name: Upload Linux Release to GitHub
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./build
          asset_name: linux_x86_x64_release
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
